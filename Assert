
DATA: lv_number TYPE i VALUE 10.
DATA: lv_divisor TYPE i VALUE 0.

* Always active assertion
BREAK ROOTSRD .
ASSERT lv_number > 0.
WRITE: / 'Assertion 1: lv_number is positive.'.

* Assertion with a checkpoint group
* Create a checkpoint group named Z_DEMO_CHECKPOINT_GROUP in transaction SAAB
* and set its operation mode (e.g., Log, Break, or Terminate)
ASSERT ID Z_DEMO_CHECKPOINT_GROUP CONDITION lv_divisor <> 0.
WRITE: / 'Assertion 2: lv_divisor is not zero.'.

IF lv_divisor <> 0.
  DATA: lv_result TYPE p DECIMALS 2.
  lv_result = lv_number / lv_divisor.
  WRITE: / 'Result of division:', lv_result.
ENDIF.

* Another always active assertion
DATA: lv_text TYPE string VALUE 'Hello'.
ASSERT lv_text IS NOT INITIAL.
WRITE: / 'Assertion 3: lv_text is not initial.'.

